html {
	box-sizing: border-box;
	font-family: sans-serif;
	font-size: 16px;
}

*,
*::before,
*::after {
	box-sizing: inherit;
}

.box {
  border: thick solid black;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 5rem;
  width: 200px;
  height: 200px;
}

.card {
  border: thick solid black;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 5rem;
  width: 600px;
  height: 400px;
}

.card img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: 0 50%;
}

/* Transiciones
  transition-property
  transition-duration
  transition-timing-function: none, linear, ease, ease-in, ease-out, ease-in-out, steps
  transition-delay
  transition: property duration timing-function delay
*/

.transitions .box {
  background-color: magenta;
  transition-property: background-color;
  transition-duration: 500ms;
  transition-timing-function: ease;
  transition-delay: .5s;
  transition: border-color 1s linear 1s;
  transition: all .5s ease-in-out 250ms;
  transition: background-color .5s ease-in-out 250ms,
  border-color .5s ease-in-out 250ms,
  border-radius .5s ease-in-out 250ms;
}

.transitions .box:hover {
  background-color: cyan;
  border-color: red;
  border-radius: 2rem;
  /* border-style: dashed; */
}

.transitions .card {
  transition: opacity 1s ease-out,
  border-color 1.5s steps(3),
  filter 2s ease-in,
  box-shadow 1.5s linear 2s;
}

.transitions .card:hover {
opacity: .75;
border-color: orchid;
filter: blur(.15rem);
box-shadow: 1rem 1rem 2rem .5rem black;
}

.transitions .card img {
  transition: object-position 2s ease-in-out 3s;
}

.transitions .card img:hover {
  object-position: 100% 50%;
}

.transform-2d img {
  transition: transform 2s ease-in-out;
}

.transform-2d img:hover {
  transform: none;
  transform: translateX(4rem);
  transform: translateY(4rem);
  transform: translateY(-4rem);
  transform: translateZ(-4rem);
  transform: translate(-4rem,4rem);
  transform: translate(50%,50%);
  transform: translate(-50%,-50%);
  transform: translate(-50%,100px);
  transform: scaleX(2);
  transform: scaleY(0.5);
  transform: scaleZ(0.5);
  transform: scale(1.5, 1.5);
  transform: scale(1.5, 1.5);
  transform: scale(0.5, 0.5);
  transform: scale(-1, 1);
  transform: rotateX(60deg); /* La imagen rota sobre el eje X */
  transform: rotateY(60deg);
  transform: rotateZ(-720deg);
  transform: rotate(-720deg); /* Lo mismo que rotateZ */
  transform: skewX(20deg);
  transform: skewX(-20deg);
  transform: skewY(-20deg);
  transform: skew(20deg, 20deg);
  transform: skew(-5deg, -30deg);
  transform: skew(-5deg, -30deg);
}